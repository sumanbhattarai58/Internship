---
title: "Assignment"
author: "Suman Bhattarai"
format: pdf
jupyter: python3
---

Linear Regression

Import all the libraries
```{python}
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
```

```{python}
# Generate Sample Data
np.random.seed(42) #random generates the random numbers
x = np.random.rand(100) * 10
print(x)
```
When you use seed, the number becomes reproducible. The 'random' produces the random numbers but everytime we execute the code the numbers get random and we dont need that. The random number should be the same as i execute or some other person execute when gets the code.So, seed of any number is used.

rand(100) generates 100 random numbers ranging between 0 and 1. So, to generate numbers between range 0 and 10, it is multiplied by 10.

```{python}
y = 5 * x + np.random.normal(0, 2, 100)  # Linear relation with noise
print(y)
```
This creates random numbers with mean at '0' , standard deviation of '2' and 100 number of samples known as noise. This is addded to our relation y=5x. The noise is added as real world data is never perfect.


```{python}
#changing arrays into dataframe
data = pd.DataFrame({'X': x, 'Y': y})
print(data)
```

```{python}
# Splitting Data
X_train, X_test, y_train, y_test = train_test_split(data[['X']], data['Y'], test_size=0.2, random_state=42)

# Training a Model
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
```

```{python}
#Regression plot
plt.figure(figsize=(12, 8))
plt.scatter(X_test, y_test, alpha=0.6, label='Actual', color='blue')
plt.scatter(X_test, y_pred, alpha=0.6, label='Predicted', color='red')
plt.plot(X_test, y_pred, color='red', linewidth=2)  # regression line
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.show()
```

```{python}
#Calculate the mean squared error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error (MSE):{mse:.3f}")

```